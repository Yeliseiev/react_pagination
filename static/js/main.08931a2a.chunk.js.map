{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Array","from","length","Math","ceil","_","n","className","classNames","disabled","href","onClick","map","page","active","items","to","numbers","push","getNumbers","App","useState","setPerPage","setCurrentPage","endItem","startItem","currentItems","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,MAAOC,EACH,EADGA,QAASC,EACZ,EADYA,YAAaC,EACzB,EADyBA,aAEvBC,EAAQC,MAAMC,KAClB,CAAEC,OAAQC,KAAKC,KAAKT,EAAQC,KAC5B,SAACS,EAAGC,GAAJ,OAAUA,EAAI,KAWhB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CAAEC,SAA0B,IAAhBZ,IADd,SAGE,mBACE,UAAQ,WACRU,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBb,EACfc,QAlBS,WACf,OAAOd,EAAc,GAAKC,EAAaD,EAAc,IAYjD,oBAWDE,EAAMa,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IAAW,YACpB,CAAEM,OAAQjB,IAAgBgB,IAF9B,SAKE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMb,EAAae,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IAAW,YACxB,CAAEC,SAAUZ,IAAgBE,EAAMG,SADpC,SAGE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeb,IAAgBE,EAAMG,OACrCS,QA7CU,WAChB,OAAOd,EAAcE,EAAMG,QAAUJ,EAAaD,EAAc,IAuC5D,wBCxDFkB,ECNC,SAAoBd,EAAce,GAGvC,IAFA,IAAMC,EAAU,GAEPX,EAAIL,EAAMK,GAAKU,EAAIV,GAAK,EAC/BW,EAAQC,KAAKZ,GAGf,OAAOW,EDDKE,CAAW,EADN,IAEhBP,KAAI,SAAAN,GAAC,qBAAYA,MAEPc,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB0B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoB0B,EAApB,KACIC,EAAU3B,EAAcD,EACtB6B,EAAYD,EAAU5B,EAExB4B,EAVa,KAWfA,EAXe,IAcjB,IAAME,EAAeX,EAAMY,MAAMF,EAAWD,GAE5C,OACE,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiC4B,EAAY,EAD7C,cACoDD,EADpD,eApBa,GAoBb,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOjC,EACPkC,SAAU,SAACC,GACTT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,IAPnB,UAUE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAjDW,GAkDXC,QAASA,EACTC,YAAaA,EACbC,aAAcyB,IAGhB,6BACGG,EAAad,KAAI,SAAAsB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YE3DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.08931a2a.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total, perPage, currentPage, onPageChange,\n}) => {\n  const pages = Array.from(\n    { length: Math.ceil(total / perPage) },\n    (_, n) => n + 1,\n  );\n\n  const moveLeft = () => {\n    return currentPage > 1 && onPageChange(currentPage - 1);\n  };\n\n  const moveRight = () => {\n    return currentPage < pages.length && onPageChange(currentPage + 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item',\n        { disabled: currentPage === 1 })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={moveLeft}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames('page-item',\n            { active: currentPage === page })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item',\n        { disabled: currentPage === pages.length })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length}\n          onClick={moveRight}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst totalItems = 42;\nconst items = getNumbers(1, totalItems)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  let endItem = currentPage * perPage;\n  const startItem = endItem - perPage;\n\n  if (endItem > totalItems) {\n    endItem = totalItems;\n  }\n\n  const currentItems = items.slice(startItem, endItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem + 1} - ${endItem} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}